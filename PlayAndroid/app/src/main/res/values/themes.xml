<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.Play.Android" parent="Theme.Material3.Light.NoActionBar">
        <!-- Primary brand color. -->
<!--        <item name="colorPrimary">@color/purple_500</item>-->
<!--        <item name="colorOnPrimary">@color/white</item>-->
<!--        &lt;!&ndash; Secondary brand color. &ndash;&gt;-->
<!--        <item name="colorSecondary">@color/teal_200</item>-->
<!--        <item name="colorSecondaryVariant">@color/teal_700</item>-->
<!--        <item name="colorOnSecondary">@color/black</item>-->

        <!-- 应用的主要色调,actionBar默认使用该颜色，Toolbar导航栏的底色 -->
<!--        <item name="colorPrimary">#FFAAAA</item>-->
        <!-- Status bar color. -->
        <!--<item name="android:statusBarColor">@android:color/transparent</item>
        <item name="android:navigationBarColor">@android:color/transparent</item>-->



        <!-- 一般控件的选中效果默认采用该颜色,如 CheckBox,RadioButton,SwitchCompat，ProcessBar等-->
<!--        <item name="colorAccent">@color/colorAccent</item>-->

        <!-- activity 是否能在status bar 底部绘制 -->
<!--        <item name="android:windowOverscan">true</item>-->
<!--        &lt;!&ndash; 让status bar透明，相当于statusBarColor=transparent + windowOverscan=true &ndash;&gt;-->
<!--        <item name="android:windowTranslucentStatus">true</item>-->
<!--        &lt;!&ndash; 全屏显示，隐藏状态栏、导航栏、底部导航栏 &ndash;&gt;-->
<!--        <item name="android:windowFullscreen">true</item>-->
<!--        &lt;!&ndash; hide title bar &ndash;&gt;-->
<!--        <item name="windowNoTitle">true</item>-->
<!--        &lt;!&ndash; 让底部导航栏变半透明灰色，覆盖在Activity之上（默认false，activity会居于底部导航栏顶部），如果设为true，navigationBarColor 失效 &ndash;&gt;-->
<!--        <item name="android:windowTranslucentNavigation">true</item>-->

<!--        &lt;!&ndash; WindowBackground，可以设置@drawable，颜色引用（@color），不能设置颜色值（#fffffff），-->
<!--        Window区域说明：Window涵盖整个屏幕显示区域，包括StatusBar的区域。当windowOverscan=false时，window的区域比Activity多出StatusBar，当windowOverscan=true时，window区域与Activity相同&ndash;&gt;-->
<!--        <item name="android:windowBackground">@drawable/ic_launcher_background</item>-->
<!--        &lt;!&ndash;<item name="android:windowBackground">@color/light_purple</item>&ndash;&gt;-->

<!--        &lt;!&ndash; 控件相关 &ndash;&gt;-->
<!--        &lt;!&ndash; button 文字是否全部大写（系统默认开）&ndash;&gt;-->
<!--        <item name="android:textAllCaps">false</item>-->

<!--        &lt;!&ndash; 默认 Button,TextView的文字颜色 &ndash;&gt;-->
<!--        <item name="android:textColor">#B0C4DE</item>-->
<!--        &lt;!&ndash; 默认 EditView 输入框字体的颜色 &ndash;&gt;-->
<!--        <item name="android:editTextColor">#E6E6FA</item>-->
<!--        &lt;!&ndash; RadioButton checkbox等控件的文字 &ndash;&gt;-->
<!--        <item name="android:textColorPrimaryDisableOnly">#1C71A9</item>-->
<!--        &lt;!&ndash; 应用的主要文字颜色,actionBar的标题文字默认使用该颜色 &ndash;&gt;-->
<!--        <item name="android:textColorPrimary">#FFFFFF</item>-->
<!--        &lt;!&ndash; 辅助的文字颜色，一般比textColorPrimary的颜色弱一点，用于一些弱化的表示 &ndash;&gt;-->
<!--        <item name="android:textColorSecondary">#C1C1C1</item>-->
<!--        &lt;!&ndash; 控件选中时的颜色,默认使用colorAccent &ndash;&gt;-->
<!--        <item name="android:colorControlActivated">#FF7F50</item>-->
<!--        &lt;!&ndash; 控件按压时的色调&ndash;&gt;-->
<!--        <item name="android:colorControlHighlight">#FF00FF</item>-->
<!--        &lt;!&ndash; CheckBox,RadioButton,SwitchCompat等默认状态的颜色 &ndash;&gt;-->
<!--        <item name="android:colorControlNormal">#FFD700</item>-->
<!--        &lt;!&ndash; 默认按钮的背景颜色 &ndash;&gt;-->
<!--        <item name="android:colorButtonNormal">#1C71A9</item>-->
    </style>


    <style name="Theme.Play" parent="android:Theme.Material.Light.NoActionBar">
        <item name="android:windowLightStatusBar" tools:targetApi="23">true</item>
        <item name="android:windowLightNavigationBar" tools:targetApi="27">true</item>
    </style>

    <style name="PlatformAdjusted.Theme.Nia" parent="Theme.Play">
        <item name="android:statusBarColor">@color/black30</item>
    </style>

    <!-- The final theme we use -->
    <style name="Theme.Nia" parent="PlatformAdjusted.Theme.Nia" />

    <style name="NightAdjusted.Theme.Splash" parent="Theme.SplashScreen">
        <item name="android:windowLightStatusBar" tools:targetApi="23">true</item>
        <item name="android:windowLightNavigationBar" tools:targetApi="27">true</item>
    </style>

    <style name="Theme.Play.Splash" parent="NightAdjusted.Theme.Splash">
        <!--向下兼容-->
<!--        <item name="windowSplashScreenAnimatedIcon">@drawable/ic_launcher_background</item>-->
        <item name="postSplashScreenTheme">@style/Theme.Nia</item>

        <!--https://juejin.cn/post/7026188311198695432#heading-15-->
        <!--启动画面背景颜色-->
<!--        <item name="windowSplashScreenBackground">@color/splashscreen_bg</item>-->
        <!-- 启动画面icon图标：这里可以是图片、帧动画等-->
        <item name="windowSplashScreenAnimatedIcon">@drawable/ic_trans_icon</item>
<!--        <item name="windowSplashScreenIconBackgroundColor">@color/splashscreen_icon_bg</item>-->
        <!-- icon动画在关闭之前显示的时长：最长时间为1000毫秒-->
<!--        <item name="windowSplashScreenAnimationDuration">1000</item>-->
        <!-- 启动画面底部的 Brand 图片-->
        <!-- Splash退出后的主题-->
<!--        <item name="postSplashScreenTheme">@style/Theme.Android12_Splash</item>-->
    </style>
</resources>